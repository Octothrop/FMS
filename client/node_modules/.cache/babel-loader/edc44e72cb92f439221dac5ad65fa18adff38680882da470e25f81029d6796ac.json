{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u6700\\u7D42\\u5E74\\u5EA6\\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\\\client\\\\src\\\\ml-model\\\\soilBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport SoilInputForm from \"./SoilInputForm\";\nimport FarmerHeader from \"../header-footer/farmer-header\";\nimport Footer from \"../header-footer/footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SoilBot() {\n  _s();\n  const [prediction, setPrediction] = useState(\"\");\n  const handlePredict = predictedCrop => {\n    setPrediction(predictedCrop);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"soil-bot\",\n    children: [/*#__PURE__*/_jsxDEV(FarmerHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Crop Prediction System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SoilInputForm, {\n      onPredict: handlePredict\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Recommended Crop: \", prediction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(SoilBot, \"08WraA1brmN2G6EPdBpn5W5zbds=\");\n_c = SoilBot;\nvar _c;\n$RefreshReg$(_c, \"SoilBot\");","map":{"version":3,"names":["React","useState","SoilInputForm","FarmerHeader","Footer","jsxDEV","_jsxDEV","SoilBot","_s","prediction","setPrediction","handlePredict","predictedCrop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onPredict","_c","$RefreshReg$"],"sources":["D:/最終年度プロジェクト/client/src/ml-model/soilBot.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport SoilInputForm from \"./SoilInputForm\";\r\nimport FarmerHeader from \"../header-footer/farmer-header\";\r\nimport Footer from \"../header-footer/footer\";\r\n\r\nexport default function SoilBot() {\r\n  const [prediction, setPrediction] = useState(\"\");\r\n\r\n  const handlePredict = (predictedCrop) => {\r\n    setPrediction(predictedCrop);\r\n  };\r\n\r\n  return (\r\n    <div className=\"soil-bot\">\r\n      <FarmerHeader />\r\n      <h1>Crop Prediction System</h1>\r\n      <SoilInputForm onPredict={handlePredict} />\r\n      {prediction && (\r\n        <div>\r\n          <h2>Recommended Crop: {prediction}</h2>\r\n        </div>\r\n      )}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAOC,MAAM,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMU,aAAa,GAAIC,aAAa,IAAK;IACvCF,aAAa,CAACE,aAAa,CAAC;EAC9B,CAAC;EAED,oBACEN,OAAA;IAAKO,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBR,OAAA,CAACH,YAAY;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChBZ,OAAA;MAAAQ,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BZ,OAAA,CAACJ,aAAa;MAACiB,SAAS,EAAER;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC1CT,UAAU,iBACTH,OAAA;MAAAQ,QAAA,eACER,OAAA;QAAAQ,QAAA,GAAI,oBAAkB,EAACL,UAAU;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CACN,eACDZ,OAAA,CAACF,MAAM;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACV,EAAA,CApBuBD,OAAO;AAAAa,EAAA,GAAPb,OAAO;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}