{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u6700\\u7D42\\u5E74\\u5EA6\\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\\\client\\\\src\\\\ml-model\\\\SoilInputForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './SoilInputForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SoilInputForm() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [predictions, setPredictions] = useState([]);\n  const [currentFiles, setCurrentFiles] = useState([]);\n  const handleFileChange = event => {\n    const newFiles = Array.from(event.target.files);\n    setCurrentFiles(prevFiles => [...prevFiles, ...newFiles]);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (currentFiles.length === 0) {\n      alert('Please upload at least one PDF file.');\n      return;\n    }\n    const promises = currentFiles.map(async file => {\n      const formData = new FormData();\n      formData.append('file', file);\n      try {\n        const response = await fetch('http://localhost:5050/predict', {\n          method: 'POST',\n          body: formData\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch prediction');\n        }\n        const data = await response.json();\n        return {\n          file: file.name,\n          prediction: data.predicted_crop\n        };\n      } catch (error) {\n        console.error('Error:', error);\n        alert('An error occurred while predicting the crop. Please try again.');\n        return null;\n      }\n    });\n    const results = await Promise.all(promises);\n    const validResults = results.filter(result => result !== null);\n    setFiles(prevFiles => [...prevFiles, ...validResults]);\n    setCurrentFiles([]); // Clear files after submission\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"soil-input-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: files.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-name\",\n          children: item.file\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: URL.createObjectURL(new Blob([item.file])),\n          title: `PDF Preview ${index}`,\n          className: \"pdf-preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prediction\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Prediction:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), \" \", item.prediction]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"input-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"application/pdf\",\n        multiple: true,\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Predict Crop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(SoilInputForm, \"iJsKAHFXsThjcV/RGheWkjaXEqU=\");\n_c = SoilInputForm;\nvar _c;\n$RefreshReg$(_c, \"SoilInputForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SoilInputForm","_s","files","setFiles","predictions","setPredictions","currentFiles","setCurrentFiles","handleFileChange","event","newFiles","Array","from","target","prevFiles","handleSubmit","preventDefault","length","alert","promises","map","file","formData","FormData","append","response","fetch","method","body","ok","Error","data","json","name","prediction","predicted_crop","error","console","results","Promise","all","validResults","filter","result","className","children","item","index","fileName","_jsxFileName","lineNumber","columnNumber","src","URL","createObjectURL","Blob","title","onSubmit","type","accept","multiple","onChange","_c","$RefreshReg$"],"sources":["D:/最終年度プロジェクト/client/src/ml-model/SoilInputForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './SoilInputForm.css';\n\nexport default function SoilInputForm() {\n  const [files, setFiles] = useState([]);\n  const [predictions, setPredictions] = useState([]);\n  const [currentFiles, setCurrentFiles] = useState([]);\n\n  const handleFileChange = (event) => {\n    const newFiles = Array.from(event.target.files);\n    setCurrentFiles((prevFiles) => [...prevFiles, ...newFiles]);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (currentFiles.length === 0) {\n      alert('Please upload at least one PDF file.');\n      return;\n    }\n\n    const promises = currentFiles.map(async (file) => {\n      const formData = new FormData();\n      formData.append('file', file);\n\n      try {\n        const response = await fetch('http://localhost:5050/predict', {\n          method: 'POST',\n          body: formData,\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to fetch prediction');\n        }\n\n        const data = await response.json();\n        return { file: file.name, prediction: data.predicted_crop };\n      } catch (error) {\n        console.error('Error:', error);\n        alert('An error occurred while predicting the crop. Please try again.');\n        return null;\n      }\n    });\n\n    const results = await Promise.all(promises);\n    const validResults = results.filter((result) => result !== null);\n    \n    setFiles((prevFiles) => [...prevFiles, ...validResults]);\n    setCurrentFiles([]); // Clear files after submission\n  };\n\n  return (\n    <div className=\"soil-input-form\">\n      <div className=\"chat-window\">\n        {files.map((item, index) => (\n          <div className=\"chat-message\" key={index}>\n            <div className=\"file-name\">{item.file}</div>\n            <iframe\n              src={URL.createObjectURL(new Blob([item.file]))}\n              title={`PDF Preview ${index}`}\n              className=\"pdf-preview\"\n            />\n            <div className=\"prediction\">\n              <strong>Prediction:</strong> {item.prediction}\n            </div>\n          </div>\n        ))}\n      </div>\n      <form onSubmit={handleSubmit} className=\"input-form\">\n        <input\n          type=\"file\"\n          accept=\"application/pdf\"\n          multiple\n          onChange={handleFileChange}\n        />\n        <button type=\"submit\">Predict Crop</button>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}