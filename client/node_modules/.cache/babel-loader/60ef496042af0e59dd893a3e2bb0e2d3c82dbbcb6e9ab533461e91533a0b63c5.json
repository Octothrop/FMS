{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u6700\\u7D42\\u5E74\\u5EA6\\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\\\client\\\\src\\\\ml-model\\\\SoilInputForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './SoilInputForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SoilInputForm() {\n  _s();\n  const [chat, setChat] = useState([]);\n  const [file, setFile] = useState(null);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!file) {\n      alert('Please upload a PDF file.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/predict', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch prediction');\n      }\n      const data = await response.json();\n      const soilData = data.soil_data;\n      setChat(prevChat => [...prevChat, {\n        type: 'user',\n        message: soilData,\n        file: URL.createObjectURL(file)\n      }, {\n        type: 'bot',\n        message: data.predicted_crop\n      }]);\n      setFile(null); // Clear file after submission\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred while predicting the crop. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"soil-input-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: chat.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-entry ${entry.type}`,\n        children: [entry.type === 'bot' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bot-message\",\n          children: entry.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), entry.file && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pdf-preview-container\",\n          children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n            src: entry.file,\n            title: `PDF Preview ${index}`,\n            className: \"pdf-preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"input-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"application/pdf\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Predict Crop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n}\n_s(SoilInputForm, \"tqf1SET42ND2DgGCBtDx15dNriA=\");\n_c = SoilInputForm;\nvar _c;\n$RefreshReg$(_c, \"SoilInputForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SoilInputForm","_s","chat","setChat","file","setFile","handleFileChange","event","target","files","handleSubmit","preventDefault","alert","formData","FormData","append","response","fetch","method","body","ok","Error","data","json","soilData","soil_data","prevChat","type","message","URL","createObjectURL","predicted_crop","error","console","className","children","map","entry","index","fileName","_jsxFileName","lineNumber","columnNumber","src","title","onSubmit","accept","onChange","_c","$RefreshReg$"],"sources":["D:/最終年度プロジェクト/client/src/ml-model/SoilInputForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './SoilInputForm.css';\n\nexport default function SoilInputForm() {\n  const [chat, setChat] = useState([]);\n  const [file, setFile] = useState(null);\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!file) {\n      alert('Please upload a PDF file.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const response = await fetch('http://127.0.0.1:5000/predict', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch prediction');\n      }\n\n      const data = await response.json();\n      const soilData = data.soil_data;\n      setChat((prevChat) => [\n        ...prevChat,\n        { type: 'user', message: soilData, file: URL.createObjectURL(file) },\n        { type: 'bot', message: data.predicted_crop },\n      ]);\n      setFile(null); // Clear file after submission\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred while predicting the crop. Please try again.');\n    }\n  };\n\n  return (\n  <div className=\"soil-input-form\">\n    <div className=\"chat-window\">\n      {chat.map((entry, index) => (\n        <div className={`chat-entry ${entry.type}`} key={index}>\n          {entry.type === 'bot' && (\n            <div className=\"bot-message\">{entry.message}</div>\n          )}\n          {entry.file && (\n            <div className=\"pdf-preview-container\">\n              <iframe\n                src={entry.file}\n                title={`PDF Preview ${index}`}\n                className=\"pdf-preview\"\n              />\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n    <form onSubmit={handleSubmit} className=\"input-form\">\n      <input type=\"file\" accept=\"application/pdf\" onChange={handleFileChange} />\n      <button type=\"submit\">Predict Crop</button>\n    </form>\n  </div>\n);\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}