{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u6700\\u7D42\\u5E74\\u5EA6\\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\\\client\\\\src\\\\market\\\\manage-crop.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CropList() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const {\n    t\n  } = useTranslation();\n  const [crops, setCrops] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:5001/api/commerce/getallcrops/${userId}`).then(response => response.json()).then(data => setCrops(data)).catch(error => console.error(error));\n  }, [userId]);\n  const handleSell = async cropId => {\n    try {\n      const response = await fetch(`http://localhost:5001/api/commerce/updateCrop/${cropId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          status: 'sold',\n          sell: true\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log(data.message);\n      setCrops(crops.map(crop => crop._id === cropId ? data.crop : crop));\n    } catch (error) {\n      console.error('There was a problem with the fetch operation:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: t('table.name')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: t('table.variety')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: t('table.category')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: t('table.label')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: t('table.harvestDate')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: t('table.quantity')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: t('table.unit')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: t('table.pricePerUnit')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: t('table.status')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: t('table.actions')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: crops.map(crop => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: crop.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: crop.variety\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: crop.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: crop.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: new Date(crop.harvestDate).toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: crop.quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: crop.unit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: crop.pricePerUnit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: crop.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [crop.status === 'sold' ? /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: true,\n            children: t('table.sold')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSell(crop._id),\n            children: t('table.sell')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: t('table.update')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, crop._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(CropList, \"0zw+nNR66rGXJDCjupiMXtQZjvs=\", false, function () {\n  return [useParams, useTranslation];\n});\n_c = CropList;\nvar _c;\n$RefreshReg$(_c, \"CropList\");","map":{"version":3,"names":["React","useState","useEffect","useTranslation","useParams","jsxDEV","_jsxDEV","CropList","_s","userId","t","crops","setCrops","fetch","then","response","json","data","catch","error","console","handleSell","cropId","method","headers","body","JSON","stringify","status","sell","ok","Error","log","message","map","crop","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","name","variety","category","label","Date","harvestDate","toLocaleDateString","quantity","unit","pricePerUnit","disabled","onClick","_c","$RefreshReg$"],"sources":["D:/最終年度プロジェクト/client/src/market/manage-crop.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nexport default function CropList() {\r\n  const { userId } = useParams();\r\n  const { t } = useTranslation();\r\n  const [crops, setCrops] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:5001/api/commerce/getallcrops/${userId}`)\r\n      .then(response => response.json())\r\n      .then(data => setCrops(data))\r\n      .catch(error => console.error(error));\r\n  }, [userId]);\r\n\r\n  const handleSell = async (cropId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5001/api/commerce/updateCrop/${cropId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          status: 'sold',\r\n          sell: true,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(data.message);\r\n      setCrops(crops.map(crop => crop._id === cropId ? data.crop : crop));\r\n    } catch (error) {\r\n      console.error('There was a problem with the fetch operation:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>{t('table.name')}</th>\r\n          <th>{t('table.variety')}</th>\r\n          <th>{t('table.category')}</th>\r\n          <th>{t('table.label')}</th>\r\n          <th>{t('table.harvestDate')}</th>\r\n          <th>{t('table.quantity')}</th>\r\n          <th>{t('table.unit')}</th>\r\n          <th>{t('table.pricePerUnit')}</th>\r\n          <th>{t('table.status')}</th>\r\n          <th>{t('table.actions')}</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {crops.map(crop => (\r\n          <tr key={crop._id}>\r\n            <td>{crop.name}</td>\r\n            <td>{crop.variety}</td>\r\n            <td>{crop.category}</td>\r\n            <td>{crop.label}</td>\r\n            <td>{new Date(crop.harvestDate).toLocaleDateString()}</td>\r\n\r\n            <td>{crop.quantity}</td>\r\n            <td>{crop.unit}</td>\r\n            <td>{crop.pricePerUnit}</td>\r\n            <td>{crop.status}</td>\r\n            <td>\r\n              {crop.status === 'sold' ? (\r\n                <button disabled>{t('table.sold')}</button>\r\n              ) : (\r\n                <button onClick={() => handleSell(crop._id)}>{t('table.sell')}</button>\r\n              )}\r\n              <button>{t('table.update')}</button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}