{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u6700\\u7D42\\u5E74\\u5EA6\\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\\\client\\\\src\\\\market\\\\manage-crop.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useParams } from \"react-router-dom\";\nimport Header from \"../header-footer/header\";\nimport Footer from \"../header-footer/footer\";\nimport \"./manage-crops.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CropList() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const {\n    t\n  } = useTranslation();\n  const [crops, setCrops] = useState([]);\n  const [editingCropId, setEditingCropId] = useState(null);\n  const [editedCrop, setEditedCrop] = useState({});\n  useEffect(() => {\n    fetch(`http://localhost:5001/api/commerce/getallcrops/${userId}`).then(response => response.json()).then(data => setCrops(data)).catch(error => console.error(error));\n  }, [userId]);\n  const handleSell = async cropId => {\n    alert(\"Do you want to add the crop on sale? You can't update crops again.\");\n    try {\n      const response = await fetch(`http://localhost:5001/api/commerce/updateCrop/${cropId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          status: \"available\",\n          sell: true\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setCrops(crops.map(crop => crop._id === cropId ? data.crop : crop));\n    } catch (error) {\n      console.error(\"There was a problem with the fetch operation:\", error);\n    }\n  };\n  const handleEdit = cropId => {\n    setEditingCropId(cropId);\n    const crop = crops.find(c => c._id === cropId);\n    setEditedCrop(crop);\n  };\n  const handleSave = async cropId => {\n    try {\n      const response = await fetch(`http://localhost:5001/api/commerce/updateCrop/${cropId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(editedCrop)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setCrops(crops.map(crop => crop._id === cropId ? data.crop : crop));\n      setEditingCropId(null);\n    } catch (error) {\n      console.error(\"There was a problem with the fetch operation:\", error);\n    }\n  };\n  const handleStopSale = async cropId => {\n    alert(\"Do you want to add the crop on sale? You can't update crops again.\");\n    try {\n      const response = await fetch(`http://localhost:5001/api/commerce/updateCrop/${cropId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sell: false\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setCrops(crops.map(crop => crop._id === cropId ? data.crop : crop));\n    } catch (error) {\n      console.error(\"There was a problem with the fetch operation:\", error);\n    }\n  };\n  const handleChange = (field, value) => {\n    setEditedCrop({\n      ...editedCrop,\n      [field]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crops-main\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manage-crops\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: editingCropId ? \"editing\" : \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"table.name\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"table.variety\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"table.category\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"table.label\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"table.harvestDate\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"table.quantity\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"table.unit\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"table.pricePerUnit\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"table.actions\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: crops.map(crop => {\n            const isOutOfStock = crop.quantity - crop.soldQty === 0;\n            const isPossible = crop.harvestDate < new Date(Date.now() - 30 * 24 * 60 * 60 * 1000);\n            console.log(crop.harvestDate, Date(crop.harvestDate), isPossible);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingCropId === crop._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: editedCrop.name || \"\",\n                  onChange: e => handleChange(\"name\", e.target.value),\n                  disabled: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 23\n                }, this) : crop.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingCropId === crop._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: editedCrop.variety || \"\",\n                  onChange: e => handleChange(\"variety\", e.target.value),\n                  disabled: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 23\n                }, this) : crop.variety\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingCropId === crop._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: editedCrop.category || \"\",\n                  onChange: e => handleChange(\"category\", e.target.value),\n                  disabled: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 23\n                }, this) : crop.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingCropId === crop._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: editedCrop.label || \"\",\n                  onChange: e => handleChange(\"label\", e.target.value),\n                  disabled: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 23\n                }, this) : crop.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingCropId === crop._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: editedCrop.harvestDate || \"\",\n                  onChange: e => handleChange(\"harvestDate\", e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 23\n                }, this) : new Date(crop.harvestDate).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingCropId === crop._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: editedCrop.quantity || \"\",\n                  onChange: e => handleChange(\"quantity\", e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 23\n                }, this) : crop.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingCropId === crop._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: editedCrop.unit || \"\",\n                  onChange: e => handleChange(\"unit\", e.target.value),\n                  disabled: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 23\n                }, this) : crop.unit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingCropId === crop._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: editedCrop.pricePerUnit || \"\",\n                  onChange: e => handleChange(\"pricePerUnit\", e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 23\n                }, this) : crop.pricePerUnit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: isOutOfStock || isPossible ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  disabled: true,\n                  className: \"out-of-stock\",\n                  children: t(\"table.outOfStock\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [editingCropId === crop._id ? /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleSave(crop._id),\n                    children: t(\"table.save\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 27\n                  }, this) : crop.sell === true ? null : /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleEdit(crop._id),\n                    className: \"update\",\n                    children: t(\"table.update\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 27\n                  }, this), crop.sell === true ? /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleStopSale(crop._id),\n                    className: \"on-sale\",\n                    children: t(\"table.stopSale\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleSell(crop._id),\n                    className: \"on-sale\",\n                    children: t(\"table.sell\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this)]\n            }, crop._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(CropList, \"7AmJ06N0WmlGnaT/vxO3CzvLptQ=\", false, function () {\n  return [useParams, useTranslation];\n});\n_c = CropList;\nvar _c;\n$RefreshReg$(_c, \"CropList\");","map":{"version":3,"names":["React","useState","useEffect","useTranslation","useParams","Header","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","CropList","_s","userId","t","crops","setCrops","editingCropId","setEditingCropId","editedCrop","setEditedCrop","fetch","then","response","json","data","catch","error","console","handleSell","cropId","alert","method","headers","body","JSON","stringify","status","sell","ok","Error","map","crop","_id","handleEdit","find","c","handleSave","handleStopSale","handleChange","field","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isOutOfStock","quantity","soldQty","isPossible","harvestDate","Date","now","log","type","name","onChange","e","target","disabled","variety","category","label","toLocaleDateString","unit","pricePerUnit","onClick","_c","$RefreshReg$"],"sources":["D:/最終年度プロジェクト/client/src/market/manage-crop.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Header from \"../header-footer/header\";\r\nimport Footer from \"../header-footer/footer\";\r\nimport \"./manage-crops.css\";\r\n\r\nexport default function CropList() {\r\n  const { userId } = useParams();\r\n  const { t } = useTranslation();\r\n  const [crops, setCrops] = useState([]);\r\n  const [editingCropId, setEditingCropId] = useState(null);\r\n  const [editedCrop, setEditedCrop] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:5001/api/commerce/getallcrops/${userId}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setCrops(data))\r\n      .catch((error) => console.error(error));\r\n  }, [userId]);\r\n\r\n  const handleSell = async (cropId) => {\r\n    alert(\"Do you want to add the crop on sale? You can't update crops again.\");\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5001/api/commerce/updateCrop/${cropId}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            status: \"available\",\r\n            sell: true,\r\n          }),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      setCrops(crops.map((crop) => (crop._id === cropId ? data.crop : crop)));\r\n    } catch (error) {\r\n      console.error(\"There was a problem with the fetch operation:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (cropId) => {\r\n    setEditingCropId(cropId);\r\n    const crop = crops.find((c) => c._id === cropId);\r\n    setEditedCrop(crop);\r\n  };\r\n\r\n  const handleSave = async (cropId) => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5001/api/commerce/updateCrop/${cropId}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(editedCrop),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      setCrops(crops.map((crop) => (crop._id === cropId ? data.crop : crop)));\r\n      setEditingCropId(null);\r\n    } catch (error) {\r\n      console.error(\"There was a problem with the fetch operation:\", error);\r\n    }\r\n  };\r\n\r\n  const handleStopSale = async (cropId) => {\r\n    alert(\"Do you want to add the crop on sale? You can't update crops again.\");\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5001/api/commerce/updateCrop/${cropId}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            sell: false,\r\n          }),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      setCrops(crops.map((crop) => (crop._id === cropId ? data.crop : crop)));\r\n    } catch (error) {\r\n      console.error(\"There was a problem with the fetch operation:\", error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (field, value) => {\r\n    setEditedCrop({ ...editedCrop, [field]: value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"crops-main\">\r\n      <Header />\r\n      <div className=\"manage-crops\">\r\n        <table className={editingCropId ? \"editing\" : \"\"}>\r\n          <thead>\r\n            <tr>\r\n              <th>{t(\"table.name\")}</th>\r\n              <th>{t(\"table.variety\")}</th>\r\n              <th>{t(\"table.category\")}</th>\r\n              <th>{t(\"table.label\")}</th>\r\n              <th>{t(\"table.harvestDate\")}</th>\r\n              <th>{t(\"table.quantity\")}</th>\r\n              <th>{t(\"table.unit\")}</th>\r\n              <th>{t(\"table.pricePerUnit\")}</th>\r\n              <th>{t(\"table.actions\")}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {crops.map((crop) => {\r\n              const isOutOfStock = (crop.quantity - crop.soldQty) === 0;\r\n              const isPossible = crop.harvestDate < new Date(Date.now() - 30 * 24 * 60 * 60 * 1000);\r\n              console.log(crop.harvestDate, Date(crop.harvestDate), isPossible);\r\n              return (\r\n                <tr key={crop._id}>\r\n                  <td>\r\n                    {editingCropId === crop._id ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        value={editedCrop.name || \"\"}\r\n                        onChange={(e) => handleChange(\"name\", e.target.value)}\r\n                        disabled\r\n                      />\r\n                    ) : (\r\n                      crop.name\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingCropId === crop._id ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        value={editedCrop.variety || \"\"}\r\n                        onChange={(e) => handleChange(\"variety\", e.target.value)}\r\n                        disabled\r\n                      />\r\n                    ) : (\r\n                      crop.variety\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingCropId === crop._id ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        value={editedCrop.category || \"\"}\r\n                        onChange={(e) => handleChange(\"category\", e.target.value)}\r\n                        disabled\r\n                      />\r\n                    ) : (\r\n                      crop.category\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingCropId === crop._id ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        value={editedCrop.label || \"\"}\r\n                        onChange={(e) => handleChange(\"label\", e.target.value)}\r\n                        disabled\r\n                      />\r\n                    ) : (\r\n                      crop.label\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingCropId === crop._id ? (\r\n                      <input\r\n                        type=\"date\"\r\n                        value={editedCrop.harvestDate || \"\"}\r\n                        onChange={(e) => handleChange(\"harvestDate\", e.target.value)}\r\n                      />\r\n                    ) : (\r\n                      new Date(crop.harvestDate).toLocaleDateString()\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingCropId === crop._id ? (\r\n                      <input\r\n                        type=\"number\"\r\n                        value={editedCrop.quantity || \"\"}\r\n                        onChange={(e) => handleChange(\"quantity\", e.target.value)}\r\n                      />\r\n                    ) : (\r\n                      crop.quantity\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingCropId === crop._id ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        value={editedCrop.unit || \"\"}\r\n                        onChange={(e) => handleChange(\"unit\", e.target.value)}\r\n                        disabled\r\n                      />\r\n                    ) : (\r\n                      crop.unit\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingCropId === crop._id ? (\r\n                      <input\r\n                        type=\"number\"\r\n                        value={editedCrop.pricePerUnit || \"\"}\r\n                        onChange={(e) => handleChange(\"pricePerUnit\", e.target.value)}\r\n                      />\r\n                    ) : (\r\n                      crop.pricePerUnit\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {isOutOfStock || isPossible ? (\r\n                      <button disabled className=\"out-of-stock\">\r\n                        {t(\"table.outOfStock\")}\r\n                      </button>\r\n                    ) : (\r\n                      <>\r\n                        {editingCropId === crop._id ? (\r\n                          <button onClick={() => handleSave(crop._id)}>\r\n                            {t(\"table.save\")}\r\n                          </button>\r\n                        ) : crop.sell === true ? null : (\r\n                          <button onClick={() => handleEdit(crop._id)} className=\"update\">\r\n                            {t(\"table.update\")}\r\n                          </button>\r\n                        )}\r\n                        {crop.sell === true ? (\r\n                          <button onClick={() => handleStopSale(crop._id)} className=\"on-sale\">\r\n                            {t(\"table.stopSale\")}\r\n                          </button>\r\n                        ) : (\r\n                          <button onClick={() => handleSell(crop._id)} className=\"on-sale\">\r\n                            {t(\"table.sell\")}\r\n                          </button>\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}