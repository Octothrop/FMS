{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u6700\\u7D42\\u5E74\\u5EA6\\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\\\client\\\\src\\\\market\\\\buy-crops.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Header from \"../header-footer/header\";\nimport Footer from \"../header-footer/footer\";\nimport \"./buy-crops.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst haversineDistance = (coords1, coords2) => {\n  const toRad = value => value * Math.PI / 180;\n  const R = 6371;\n  const dLat = toRad(coords2.latitude - coords1.latitude);\n  const dLon = toRad(coords2.longitude - coords1.longitude);\n  const lat1 = toRad(coords1.latitude);\n  const lat2 = toRad(coords2.latitude);\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1) * Math.cos(lat2) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n};\nexport default function BuyCrops() {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const [cropsOnSale, setCropsOnSale] = useState([]);\n  const [userLocation, setUserLocation] = useState(null);\n  const [maxDistance, setMaxDistance] = useState(100); // Default max distance\n  const [filteredCrops, setFilteredCrops] = useState([]);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setUserLocation({\n        latitude,\n        longitude\n      });\n    }, error => {\n      console.error(\"Error fetching user location:\", error);\n    });\n    fetch(\"http://localhost:5001/api/commerce/getAllCropsOnSale\").then(response => response.json()).then(data => {\n      setCropsOnSale(data);\n      setFilteredCrops(data); // Initialize filtered crops\n    }).catch(error => console.error(error));\n  }, []);\n  useEffect(() => {\n    // Filter crops based on distance when maxDistance or cropsOnSale changes\n    if (userLocation) {\n      const newFilteredCrops = cropsOnSale.filter(crop => {\n        const cropLocation = {\n          latitude: crop.location.coordinates[1],\n          longitude: crop.location.coordinates[0]\n        };\n        const distance = haversineDistance(userLocation, cropLocation);\n        return distance <= maxDistance;\n      });\n      setFilteredCrops(newFilteredCrops);\n    }\n  }, [maxDistance, cropsOnSale, userLocation]);\n  const handleBuy = async cropId => {\n    const confirmation = window.confirm(t(\"confirm_buy\"));\n    if (!confirmation) return;\n    const qty = window.prompt(t(\"enter_quantity\")); // Ask for quantity\n    if (qty === null) return; // User canceled\n    const quantity = parseInt(qty, 10);\n    if (isNaN(quantity) || quantity <= 0) {\n      alert(t(\"invalid_quantity\")); // Notify user of invalid quantity\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:5001/api/commerce/buyCrop/${cropId}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          quantity\n        }) // Send the quantity in the request\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      alert(t(\"purchase_success\"));\n      setFilteredCrops(filteredCrops.filter(crop => crop._id !== cropId));\n      setCropsOnSale(cropsOnSale.filter(crop => crop._id !== cropId));\n    } catch (error) {\n      console.error(\"There was a problem with the fetch operation:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"buy-crops-main\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buy-crops\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: maxDistance,\n          onChange: e => setMaxDistance(e.target.value),\n          placeholder: t(\"max_distance_placeholder\") // You can define this translation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setMaxDistance(maxDistance),\n          children: t(\"filter\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"table.name\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"table.variety\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"table.harvestDate\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"table.quantity\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"table.pricePerUnit\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"table.distance\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"table.buy\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredCrops.map(crop => {\n            const cropLocation = {\n              latitude: crop.location.coordinates[1],\n              longitude: crop.location.coordinates[0]\n            };\n            const distance = userLocation && cropLocation ? haversineDistance(userLocation, cropLocation).toFixed(2) : \"N/A\";\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: t(crop.name)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: t(crop.variety)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(crop.harvestDate).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: crop.quantity - crop.soldQty\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: crop.pricePerUnit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [distance, \" km\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleBuy(crop._id),\n                  children: t(\"table.buy\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this)]\n            }, crop._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(BuyCrops, \"9UJV2saN7wg3mL8GqmIf2QvXIwg=\", false, function () {\n  return [useTranslation];\n});\n_c = BuyCrops;\nvar _c;\n$RefreshReg$(_c, \"BuyCrops\");","map":{"version":3,"names":["React","useState","useEffect","useTranslation","Header","Footer","jsxDEV","_jsxDEV","haversineDistance","coords1","coords2","toRad","value","Math","PI","R","dLat","latitude","dLon","longitude","lat1","lat2","a","sin","cos","c","atan2","sqrt","BuyCrops","_s","t","cropsOnSale","setCropsOnSale","userLocation","setUserLocation","maxDistance","setMaxDistance","filteredCrops","setFilteredCrops","navigator","geolocation","getCurrentPosition","position","coords","error","console","fetch","then","response","json","data","catch","newFilteredCrops","filter","crop","cropLocation","location","coordinates","distance","handleBuy","cropId","confirmation","window","confirm","qty","prompt","quantity","parseInt","isNaN","alert","method","headers","body","JSON","stringify","ok","Error","status","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","onClick","map","toFixed","name","variety","Date","harvestDate","toLocaleDateString","soldQty","pricePerUnit","_c","$RefreshReg$"],"sources":["D:/最終年度プロジェクト/client/src/market/buy-crops.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Header from \"../header-footer/header\";\r\nimport Footer from \"../header-footer/footer\";\r\nimport \"./buy-crops.css\";\r\n\r\nconst haversineDistance = (coords1, coords2) => {\r\n  const toRad = (value) => (value * Math.PI) / 180;\r\n  const R = 6371;\r\n\r\n  const dLat = toRad(coords2.latitude - coords1.latitude);\r\n  const dLon = toRad(coords2.longitude - coords1.longitude);\r\n  const lat1 = toRad(coords1.latitude);\r\n  const lat2 = toRad(coords2.latitude);\r\n\r\n  const a =\r\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n    Math.cos(lat1) * Math.cos(lat2) *\r\n    Math.sin(dLon / 2) * Math.sin(dLon / 2);\r\n\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n\r\n  return R * c;\r\n};\r\n\r\nexport default function BuyCrops() {\r\n  const { t } = useTranslation();\r\n  const [cropsOnSale, setCropsOnSale] = useState([]);\r\n  const [userLocation, setUserLocation] = useState(null);\r\n  const [maxDistance, setMaxDistance] = useState(100); // Default max distance\r\n  const [filteredCrops, setFilteredCrops] = useState([]);\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        setUserLocation({ latitude, longitude });\r\n      },\r\n      (error) => {\r\n        console.error(\"Error fetching user location:\", error);\r\n      }\r\n    );\r\n\r\n    fetch(\"http://localhost:5001/api/commerce/getAllCropsOnSale\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCropsOnSale(data);\r\n        setFilteredCrops(data); // Initialize filtered crops\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Filter crops based on distance when maxDistance or cropsOnSale changes\r\n    if (userLocation) {\r\n      const newFilteredCrops = cropsOnSale.filter((crop) => {\r\n        const cropLocation = {\r\n          latitude: crop.location.coordinates[1],\r\n          longitude: crop.location.coordinates[0],\r\n        };\r\n        const distance = haversineDistance(userLocation, cropLocation);\r\n        return distance <= maxDistance;\r\n      });\r\n      setFilteredCrops(newFilteredCrops);\r\n    }\r\n  }, [maxDistance, cropsOnSale, userLocation]);\r\n\r\n  const handleBuy = async (cropId) => {\r\n    const confirmation = window.confirm(t(\"confirm_buy\"));\r\n    if (!confirmation) return;\r\n\r\n    const qty = window.prompt(t(\"enter_quantity\")); // Ask for quantity\r\n    if (qty === null) return; // User canceled\r\n    const quantity = parseInt(qty, 10);\r\n\r\n    if (isNaN(quantity) || quantity <= 0) {\r\n      alert(t(\"invalid_quantity\")); // Notify user of invalid quantity\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5001/api/commerce/buyCrop/${cropId}`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ quantity }), // Send the quantity in the request\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      alert(t(\"purchase_success\"));\r\n\r\n      setFilteredCrops(filteredCrops.filter((crop) => crop._id !== cropId));\r\n      setCropsOnSale(cropsOnSale.filter((crop) => crop._id !== cropId));\r\n    } catch (error) {\r\n      console.error(\"There was a problem with the fetch operation:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"buy-crops-main\">\r\n      <Header />\r\n      <div className=\"buy-crops\">\r\n        <div className=\"filter-section\">\r\n          <input\r\n            type=\"number\"\r\n            value={maxDistance}\r\n            onChange={(e) => setMaxDistance(e.target.value)}\r\n            placeholder={t(\"max_distance_placeholder\")} // You can define this translation\r\n          />\r\n          <button onClick={() => setMaxDistance(maxDistance)}>\r\n            {t(\"filter\")}\r\n          </button>\r\n        </div>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>{t(\"table.name\")}</th>\r\n              <th>{t(\"table.variety\")}</th>\r\n              <th>{t(\"table.harvestDate\")}</th>\r\n              <th>{t(\"table.quantity\")}</th>\r\n              <th>{t(\"table.pricePerUnit\")}</th>\r\n              <th>{t(\"table.distance\")}</th>\r\n              <th>{t(\"table.buy\")}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredCrops.map((crop) => {\r\n              const cropLocation = {\r\n                latitude: crop.location.coordinates[1],\r\n                longitude: crop.location.coordinates[0],\r\n              };\r\n              const distance =\r\n                userLocation && cropLocation\r\n                  ? haversineDistance(userLocation, cropLocation).toFixed(2)\r\n                  : \"N/A\";\r\n\r\n              return (\r\n                <tr key={crop._id}>\r\n                  <td>{t(crop.name)}</td>\r\n                  <td>{t(crop.variety)}</td>\r\n                  <td>{new Date(crop.harvestDate).toLocaleDateString()}</td>\r\n                  <td>{crop.quantity-crop.soldQty}</td>\r\n                  <td>{crop.pricePerUnit}</td>\r\n                  <td>{distance} km</td>\r\n                  <td>\r\n                    <button onClick={() => handleBuy(crop._id)}>\r\n                      {t(\"table.buy\")}\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}