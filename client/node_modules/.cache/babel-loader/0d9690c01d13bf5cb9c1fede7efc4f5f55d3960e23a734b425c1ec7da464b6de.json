{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u6700\\u7D42\\u5E74\\u5EA6\\u30D7\\u30ED\\u30B8\\u30A7\\u30AF\\u30C8\\\\client\\\\src\\\\market\\\\manage-orders.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useParams } from \"react-router-dom\";\nimport Header from \"../header-footer/header\";\nimport Footer from \"../header-footer/footer\";\nimport \"./manage-crops.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CropList() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const {\n    t\n  } = useTranslation();\n  const [crops, setCrops] = useState([]);\n  const [editingCropId, setEditingCropId] = useState(null);\n  const [editedCrop, setEditedCrop] = useState({});\n  const [trackedOrderId, setTrackedOrderId] = useState(null);\n  useEffect(() => {\n    fetch(`http://localhost:5001/api/commerce/getallcrops/${userId}`).then(response => response.json()).then(data => setCrops(data)).catch(error => console.error(error));\n  }, [userId]);\n  const handleSell = async cropId => {\n    const confirmation = window.confirm(t(\"add_crop_sale\"));\n    if (!confirmation) return;\n    try {\n      const response = await fetch(`http://localhost:5001/api/commerce/updateCrop/${cropId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          status: \"available\",\n          sell: true\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setCrops(crops.map(crop => crop._id === cropId ? data.crop : crop));\n    } catch (error) {\n      console.error(\"There was a problem with the fetch operation:\", error);\n    }\n  };\n  const handleEdit = cropId => {\n    setEditingCropId(cropId);\n    const crop = crops.find(c => c._id === cropId);\n    setEditedCrop(crop);\n  };\n  const handleSave = async cropId => {\n    try {\n      const response = await fetch(`http://localhost:5001/api/commerce/updateCrop/${cropId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(editedCrop)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setCrops(crops.map(crop => crop._id === cropId ? data.crop : crop));\n      setEditingCropId(null);\n    } catch (error) {\n      console.error(\"There was a problem with the fetch operation:\", error);\n    }\n  };\n  const handleStopSale = async cropId => {\n    const confirmation = window.confirm(t(\"remove_crop_sale\"));\n    if (!confirmation) return;\n    try {\n      const response = await fetch(`http://localhost:5001/api/commerce/updateCrop/${cropId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sell: false\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setCrops(crops.map(crop => crop._id === cropId ? data.crop : crop));\n    } catch (error) {\n      console.error(\"There was a problem with the fetch operation:\", error);\n    }\n  };\n  const handleDelete = async cropId => {\n    const confirmation = window.confirm(t(\"deletion_irreversible\"));\n    if (!confirmation) return;\n    try {\n      const response = await fetch(`http://localhost:5001/api/commerce/delete/${cropId}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      setCrops(crops.filter(crop => crop._id !== cropId));\n    } catch (error) {\n      console.error(\"There was a problem with the fetch operation:\", error);\n    }\n  };\n  const handleChange = (field, value) => {\n    setEditedCrop({\n      ...editedCrop,\n      [field]: value\n    });\n  };\n  const calculateDeliveryDays = harvestDate => {\n    const harvest = new Date(harvestDate);\n    const today = new Date();\n    const daysSinceHarvest = Math.floor((today - harvest) / (1000 * 60 * 60 * 24));\n    const expectedSaleDays = 5;\n    const deliveryDays = 2;\n    const distanceDays = 0;\n    if (daysSinceHarvest < expectedSaleDays) {\n      return {\n        expectedDelivery: null,\n        daysLeft: expectedSaleDays - daysSinceHarvest\n      };\n    } else if (daysSinceHarvest < expectedSaleDays + deliveryDays) {\n      return {\n        expectedDelivery: null,\n        daysLeft: expectedSaleDays + deliveryDays - daysSinceHarvest\n      };\n    } else {\n      const totalDaysUntilDelivery = daysSinceHarvest + distanceDays;\n      return {\n        expectedDelivery: totalDaysUntilDelivery,\n        daysLeft: 0\n      };\n    }\n  };\n  const getDeliveryStage = days => {\n    if (days < 0) return {\n      stage: \"Not harvested yet\",\n      completed: 0\n    };\n    if (days < 5) return {\n      stage: \"Crop Harvested\",\n      completed: 1\n    };\n    if (days < 7) return {\n      stage: \"Out for Delivery\",\n      completed: 2\n    };\n    return {\n      stage: \"Delivered\",\n      completed: 3\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crops-main\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manage-crops\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: editingCropId ? \"editing\" : \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"table.name\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"table.variety\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"table.category\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"table.label\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"table.harvestDate\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"table.quantity\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"table.unit\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"table.pricePerUnit\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"table.actions\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: crops.map(crop => {\n            const isOutOfStock = crop.quantity - crop.soldQty <= 0;\n            const isPossible = new Date(crop.harvestDate) < new Date(Date.now() - 30 * 24 * 60 * 60 * 1000);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingCropId === crop._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: editedCrop.name || \"\",\n                  onChange: e => handleChange(\"name\", e.target.value),\n                  disabled: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 23\n                }, this) : crop.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingCropId === crop._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: editedCrop.variety || \"\",\n                  onChange: e => handleChange(\"variety\", e.target.value),\n                  disabled: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 23\n                }, this) : crop.variety\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingCropId === crop._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: editedCrop.category || \"\",\n                  onChange: e => handleChange(\"category\", e.target.value),\n                  disabled: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 23\n                }, this) : crop.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingCropId === crop._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: editedCrop.label || \"\",\n                  onChange: e => handleChange(\"label\", e.target.value),\n                  disabled: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 23\n                }, this) : crop.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingCropId === crop._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: editedCrop.harvestDate || \"\",\n                  onChange: e => handleChange(\"harvestDate\", e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 23\n                }, this) : new Date(crop.harvestDate).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingCropId === crop._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: editedCrop.quantity || \"\",\n                  onChange: e => handleChange(\"quantity\", e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 23\n                }, this) : crop.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingCropId === crop._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: editedCrop.unit || \"\",\n                  onChange: e => handleChange(\"unit\", e.target.value),\n                  disabled: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 23\n                }, this) : crop.unit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingCropId === crop._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: editedCrop.pricePerUnit || \"\",\n                  onChange: e => handleChange(\"pricePerUnit\", e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 23\n                }, this) : crop.pricePerUnit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingCropId === crop._id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleSave(crop._id),\n                    children: t(\"save\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => setEditingCropId(null),\n                    children: t(\"cancel\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [!isOutOfStock && /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleSell(crop._id),\n                    children: t(\"sell\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleEdit(crop._id),\n                    children: t(\"edit\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleStopSale(crop._id),\n                    children: t(\"stop_sale\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleDelete(crop._id),\n                    children: t(\"delete\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this), trackedOrderId === crop._id && /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-bar\",\n                    children: [\"Crop Harvested\", \"Out for Delivery\", \"Delivered\"].map((stage, index) => {\n                      const days = calculateDeliveryDays(crop.harvestDate);\n                      const {\n                        expectedDelivery,\n                        daysLeft\n                      } = days;\n                      const {\n                        completed\n                      } = getDeliveryStage(days.daysLeft);\n                      const isCompleted = index <= completed;\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"progress-step\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: `step-marker ${isCompleted ? \"completed\" : \"\"}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 300,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: `step-text ${isCompleted ? \"completed-text\" : \"\"}`,\n                          children: stage\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 301,\n                          columnNumber: 33\n                        }, this), index < 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: `line ${isCompleted ? \"completed-line\" : \"\"}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 302,\n                          columnNumber: 47\n                        }, this)]\n                      }, index, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 299,\n                        columnNumber: 31\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"delivery-status\",\n                    children: daysLeft > 0 ? `Expected to be delivered in ${daysLeft} days` : `Expected delivery is ${expectedDelivery} days after harvest`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 21\n              }, this)]\n            }, crop._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n_s(CropList, \"5pjsyMVUmjlFe99xKcl26/nybo4=\", false, function () {\n  return [useParams, useTranslation];\n});\n_c = CropList;\nvar _c;\n$RefreshReg$(_c, \"CropList\");","map":{"version":3,"names":["React","useState","useEffect","useTranslation","useParams","Header","Footer","jsxDEV","_jsxDEV","CropList","_s","userId","t","crops","setCrops","editingCropId","setEditingCropId","editedCrop","setEditedCrop","trackedOrderId","setTrackedOrderId","fetch","then","response","json","data","catch","error","console","handleSell","cropId","confirmation","window","confirm","method","headers","body","JSON","stringify","status","sell","ok","Error","map","crop","_id","handleEdit","find","c","handleSave","handleStopSale","handleDelete","filter","handleChange","field","value","calculateDeliveryDays","harvestDate","harvest","Date","today","daysSinceHarvest","Math","floor","expectedSaleDays","deliveryDays","distanceDays","expectedDelivery","daysLeft","totalDaysUntilDelivery","getDeliveryStage","days","stage","completed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isOutOfStock","quantity","soldQty","isPossible","now","type","name","onChange","e","target","disabled","variety","category","label","toLocaleDateString","unit","pricePerUnit","onClick","colSpan","index","isCompleted","_c","$RefreshReg$"],"sources":["D:/最終年度プロジェクト/client/src/market/manage-orders.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Header from \"../header-footer/header\";\r\nimport Footer from \"../header-footer/footer\";\r\nimport \"./manage-crops.css\";\r\n\r\nexport default function CropList() {\r\n  const { userId } = useParams();\r\n  const { t } = useTranslation();\r\n  const [crops, setCrops] = useState([]);\r\n  const [editingCropId, setEditingCropId] = useState(null);\r\n  const [editedCrop, setEditedCrop] = useState({});\r\n  const [trackedOrderId, setTrackedOrderId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:5001/api/commerce/getallcrops/${userId}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setCrops(data))\r\n      .catch((error) => console.error(error));\r\n  }, [userId]);\r\n\r\n  const handleSell = async (cropId) => {\r\n    const confirmation = window.confirm(t(\"add_crop_sale\"));\r\n    if (!confirmation) return;\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5001/api/commerce/updateCrop/${cropId}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            status: \"available\",\r\n            sell: true,\r\n          }),\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      setCrops(crops.map((crop) => (crop._id === cropId ? data.crop : crop)));\r\n    } catch (error) {\r\n      console.error(\"There was a problem with the fetch operation:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (cropId) => {\r\n    setEditingCropId(cropId);\r\n    const crop = crops.find((c) => c._id === cropId);\r\n    setEditedCrop(crop);\r\n  };\r\n\r\n  const handleSave = async (cropId) => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5001/api/commerce/updateCrop/${cropId}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(editedCrop),\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      setCrops(crops.map((crop) => (crop._id === cropId ? data.crop : crop)));\r\n      setEditingCropId(null);\r\n    } catch (error) {\r\n      console.error(\"There was a problem with the fetch operation:\", error);\r\n    }\r\n  };\r\n\r\n  const handleStopSale = async (cropId) => {\r\n    const confirmation = window.confirm(t(\"remove_crop_sale\"));\r\n    if (!confirmation) return;\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5001/api/commerce/updateCrop/${cropId}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            sell: false,\r\n          }),\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      setCrops(crops.map((crop) => (crop._id === cropId ? data.crop : crop)));\r\n    } catch (error) {\r\n      console.error(\"There was a problem with the fetch operation:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (cropId) => {\r\n    const confirmation = window.confirm(t(\"deletion_irreversible\"));\r\n    if (!confirmation) return;\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5001/api/commerce/delete/${cropId}`,\r\n        {\r\n          method: \"DELETE\",\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      setCrops(crops.filter((crop) => crop._id !== cropId));\r\n    } catch (error) {\r\n      console.error(\"There was a problem with the fetch operation:\", error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (field, value) => {\r\n    setEditedCrop({ ...editedCrop, [field]: value });\r\n  };\r\n\r\n  const calculateDeliveryDays = (harvestDate) => {\r\n    const harvest = new Date(harvestDate);\r\n    const today = new Date();\r\n    const daysSinceHarvest = Math.floor((today - harvest) / (1000 * 60 * 60 * 24));\r\n    const expectedSaleDays = 5;\r\n    const deliveryDays = 2;\r\n    const distanceDays = 0;\r\n    if (daysSinceHarvest < expectedSaleDays) {\r\n      return { expectedDelivery: null, daysLeft: expectedSaleDays - daysSinceHarvest };\r\n    } else if (daysSinceHarvest < expectedSaleDays + deliveryDays) {\r\n      return { expectedDelivery: null, daysLeft: expectedSaleDays + deliveryDays - daysSinceHarvest };\r\n    } else {\r\n      const totalDaysUntilDelivery = daysSinceHarvest + distanceDays;\r\n      return { expectedDelivery: totalDaysUntilDelivery, daysLeft: 0 };\r\n    }\r\n  };\r\n\r\n  const getDeliveryStage = (days) => {\r\n    if (days < 0) return { stage: \"Not harvested yet\", completed: 0 };\r\n    if (days < 5) return { stage: \"Crop Harvested\", completed: 1 };\r\n    if (days < 7) return { stage: \"Out for Delivery\", completed: 2 };\r\n    return { stage: \"Delivered\", completed: 3 };\r\n  };\r\n\r\n  return (\r\n    <div className=\"crops-main\">\r\n      <Header />\r\n      <div className=\"manage-crops\">\r\n        <table className={editingCropId ? \"editing\" : \"\"}>\r\n          <thead>\r\n            <tr>\r\n              <th>{t(\"table.name\")}</th>\r\n              <th>{t(\"table.variety\")}</th>\r\n              <th>{t(\"table.category\")}</th>\r\n              <th>{t(\"table.label\")}</th>\r\n              <th>{t(\"table.harvestDate\")}</th>\r\n              <th>{t(\"table.quantity\")}</th>\r\n              <th>{t(\"table.unit\")}</th>\r\n              <th>{t(\"table.pricePerUnit\")}</th>\r\n              <th>{t(\"table.actions\")}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {crops.map((crop) => {\r\n              const isOutOfStock = crop.quantity - crop.soldQty <= 0;\r\n              const isPossible =\r\n                new Date(crop.harvestDate) < new Date(Date.now() - 30 * 24 * 60 * 60 * 1000);\r\n\r\n              return (\r\n                <tr key={crop._id}>\r\n                  <td>\r\n                    {editingCropId === crop._id ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        value={editedCrop.name || \"\"}\r\n                        onChange={(e) => handleChange(\"name\", e.target.value)}\r\n                        disabled\r\n                      />\r\n                    ) : (\r\n                      crop.name\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingCropId === crop._id ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        value={editedCrop.variety || \"\"}\r\n                        onChange={(e) => handleChange(\"variety\", e.target.value)}\r\n                        disabled\r\n                      />\r\n                    ) : (\r\n                      crop.variety\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingCropId === crop._id ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        value={editedCrop.category || \"\"}\r\n                        onChange={(e) => handleChange(\"category\", e.target.value)}\r\n                        disabled\r\n                      />\r\n                    ) : (\r\n                      crop.category\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingCropId === crop._id ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        value={editedCrop.label || \"\"}\r\n                        onChange={(e) => handleChange(\"label\", e.target.value)}\r\n                        disabled\r\n                      />\r\n                    ) : (\r\n                      crop.label\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingCropId === crop._id ? (\r\n                      <input\r\n                        type=\"date\"\r\n                        value={editedCrop.harvestDate || \"\"}\r\n                        onChange={(e) => handleChange(\"harvestDate\", e.target.value)}\r\n                      />\r\n                    ) : (\r\n                      new Date(crop.harvestDate).toLocaleDateString()\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingCropId === crop._id ? (\r\n                      <input\r\n                        type=\"number\"\r\n                        value={editedCrop.quantity || \"\"}\r\n                        onChange={(e) => handleChange(\"quantity\", e.target.value)}\r\n                      />\r\n                    ) : (\r\n                      crop.quantity\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingCropId === crop._id ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        value={editedCrop.unit || \"\"}\r\n                        onChange={(e) => handleChange(\"unit\", e.target.value)}\r\n                        disabled\r\n                      />\r\n                    ) : (\r\n                      crop.unit\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingCropId === crop._id ? (\r\n                      <input\r\n                        type=\"number\"\r\n                        value={editedCrop.pricePerUnit || \"\"}\r\n                        onChange={(e) => handleChange(\"pricePerUnit\", e.target.value)}\r\n                      />\r\n                    ) : (\r\n                      crop.pricePerUnit\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingCropId === crop._id ? (\r\n                      <div>\r\n                        <button onClick={() => handleSave(crop._id)}>{t(\"save\")}</button>\r\n                        <button onClick={() => setEditingCropId(null)}>{t(\"cancel\")}</button>\r\n                      </div>\r\n                    ) : (\r\n                      <div>\r\n                        {!isOutOfStock && (\r\n                          <button onClick={() => handleSell(crop._id)}>{t(\"sell\")}</button>\r\n                        )}\r\n                        <button onClick={() => handleEdit(crop._id)}>{t(\"edit\")}</button>\r\n                        <button onClick={() => handleStopSale(crop._id)}>{t(\"stop_sale\")}</button>\r\n                        <button onClick={() => handleDelete(crop._id)}>{t(\"delete\")}</button>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                  {trackedOrderId === crop._id && (\r\n                    <tr>\r\n                      <td colSpan=\"6\">\r\n                        <div className=\"progress-bar\">\r\n                          {[\"Crop Harvested\", \"Out for Delivery\", \"Delivered\"].map((stage, index) => {\r\n                            const days = calculateDeliveryDays(crop.harvestDate);\r\n                            const { expectedDelivery, daysLeft } = days;\r\n                            const { completed } = getDeliveryStage(days.daysLeft);\r\n                            const isCompleted = index <= completed;\r\n\r\n                            return (\r\n                              <div key={index} className=\"progress-step\">\r\n                                <div className={`step-marker ${isCompleted ? \"completed\" : \"\"}`} />\r\n                                <span className={`step-text ${isCompleted ? \"completed-text\" : \"\"}`}>{stage}</span>\r\n                                {index < 2 && <div className={`line ${isCompleted ? \"completed-line\" : \"\"}`} />}\r\n                              </div>\r\n                            );\r\n                          })}\r\n                        </div>\r\n                        <div className=\"delivery-status\">\r\n                          {daysLeft > 0 ? `Expected to be delivered in ${daysLeft} days` : `Expected delivery is ${expectedDelivery} days after harvest`}\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}